name: Build and Publish Multi-Platform Docker Image

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch latest version from PyPI
        id: get-version
        run: |
          LATEST_VERSION=$(curl -s https://pypi.org/pypi/cyberdrop-dl-patched/json | jq -r '.info.version')
          echo "Latest version: $LATEST_VERSION"
          echo "CYBERDROP_DL_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Check if release is new
        id: check-release
        run: |
          # Fetch the current version from the Docker Hub tags
          DOCKERHUB_IMAGE="ne0lith/cdl-docker"
          CURRENT_VERSION=$(curl -s https://hub.docker.com/v2/repositories/${DOCKERHUB_IMAGE}/tags | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
          
          echo "Current version: $CURRENT_VERSION"
          echo "Latest version: $CYBERDROP_DL_VERSION"

          if [ "$CURRENT_VERSION" = "$CYBERDROP_DL_VERSION" ]; then
            echo "No new release to publish."
            echo "new_release=false" >> $GITHUB_ENV
          else
            echo "New release detected!"
            echo "new_release=true" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: env.new_release == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        if: env.new_release == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        if: env.new_release == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        if: env.new_release == 'true'
        run: |
          DOCKERHUB_IMAGE="ne0lith/cdl-docker"
          GHCR_IMAGE="ghcr.io/${{ github.repository_owner }}/cdl-docker"

          # Multi-platform build for both amd64 and arm64
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg CYBERDROP_DL_VERSION=$CYBERDROP_DL_VERSION \
            --tag $DOCKERHUB_IMAGE:latest \
            --tag $DOCKERHUB_IMAGE:$CYBERDROP_DL_VERSION \
            --tag $GHCR_IMAGE:latest \
            --tag $GHCR_IMAGE:$CYBERDROP_DL_VERSION \
            --push .

      - name: Notify Discord
        if: env.new_release == 'true'
        run: |
          DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
          LATEST_VERSION=$CYBERDROP_DL_VERSION

          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\": \"âœ… New Docker image build pushed! Version: $LATEST_VERSION\"}" \
          $DISCORD_WEBHOOK_URL
