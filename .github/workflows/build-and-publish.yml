name: Build and Publish Multi-Platform Docker Image

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch latest version from PyPI
        id: get-version
        run: |
          LATEST_VERSION=$(curl -s https://pypi.org/pypi/cyberdrop-dl-patched/json | jq -r '.info.version')
          echo "Latest version: $LATEST_VERSION"
          echo "CYBERDROP_DL_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          DOCKERHUB_IMAGE="ne0lith/cdl-docker"
          GHCR_IMAGE="ghcr.io/${{ github.repository_owner }}/cdl-docker"

          docker buildx build \
            --platform linux/amd64 \
            --build-arg CYBERDROP_DL_VERSION=$CYBERDROP_DL_VERSION \
            --tag $DOCKERHUB_IMAGE:latest \
            --tag $DOCKERHUB_IMAGE:$CYBERDROP_DL_VERSION \
            --tag $GHCR_IMAGE:latest \
            --tag $GHCR_IMAGE:$CYBERDROP_DL_VERSION \
            --push .

          docker buildx build \
            --platform linux/arm64 \
            --build-arg CYBERDROP_DL_VERSION=$CYBERDROP_DL_VERSION \
            --tag $DOCKERHUB_IMAGE:arm64-$CYBERDROP_DL_VERSION \
            --tag $GHCR_IMAGE:arm64-$CYBERDROP_DL_VERSION \
            --push .
